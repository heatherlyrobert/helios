.TH helios 1 2014-oct "linux" "heatherly custom tools manual"

.SH NAME
helios-phaeton (locate) filesystem indexing and search services

.SH IMAGERY (see HERITAGE at bottom for more)
drives the sun across the sky in a chariot pulled by winged horses

.SH SUMMARY
helios is a fast, clean, expanded, and traceable version of the classic,
well-worn, and posix-defined locate, file indexing and searching command,
with enhanced reporting, debugging, and integration points.

.SH SYNOPSIS

.B helios [ARGUMENTS] [REGEX]
.nf
which is the primary production version

.B helios_debug [URGENTS] [ARGUMENTS] [REGEX]
.nf
which can perform all helios actions, but with debugging and tracing

.B updatedb and locate
are hardlinked to helios

.SH USER/AUDIENCE
helios is not intended for general audiences.  while it can replace any
other file indexing and searching, it is not intended to do so on typical
user systems.  this is a tool built for power-users and provides no real
concessions for anyone else.
 
.SH REGEX PATTERN
helios uses a single extended regular expression, full stop.  there are no
options to use literals or gobbing.  none.

.B --all
, this option is the same as leaving the regex blank

since helios uses my custom regex library, anything beyond the basic
posix-defined standard may be implemented slightly differently.  please review
yREGEX for help in that regard.

.SH SECURITY and PERMISSIONS
helios will not present any files or directories to which the user does not
have access.

.B --super
, will filter for suid and guid programs

.B --uid <#>
, will filter for specific uid

.B --gid <#>
, will filter for specific gid

security information is retained from when the file was reviewed.  it is
possible that permissions could be updated since last update.  this is a
recognized trade-off to allow fast, off-line reviews.

.SH OUTPUT FORMATS (optional)
by default, helios returns a list of fully qualified files (like locate).
but, there are other output formats depending on the need.

.B --normal
, default, locate format

.B --silent
, no results presented

.B --count
, only indicate how many matches, no other output

.B prepend
a couple columns in front of name
  --show-mime           mime category and extention
  --show-ages           age category and days since update
  --show-size           size category and bytes
  --show-level          depth in directory tree
  --show-naming         name quality category and length
  --show-find           regex match position and length
  --show-perms          security/permission information

.B --detail
, present major categorizations

.B --analysis
, is a very extensive data dump

.B --gyges
, is same as --analysis, but delimited for gyges

.SH OUTPUT TWEAKS (optional)
these two flags change the output from a simple list to a more formatted report.

.B --headers
, provides column headers, spacing, and titles

.B --lineno
, provides line numbers

.SH SEQUENCE FILTERS (optional)
these flags do simple adjustments to avoid needing "head" or "tail" to
a pipeline.

.B --limit <#>
, only shows the first <#> matching items

.B --number <#>
, only shows the <#>'th matching item

.B --first
, shows very first matching item

.SH STRUCTURE FILTERS (optional)
searches can be honed in by specifying a start point, other than root, and a
maximum recursion depth from the start.

.B --start <dir>
, begin matching at the indicated dir and recurse down

.B --depth <#>
, will not go lower than absolute level <#>

.SH FILE TYPE FILTERS (optional)
the file types are direct matches to the stat() function results.  the
default is for all to be shown.  the first positive request (on), will
first turn all options off.

.B turning on and off.
  --reg   , --noreg       regular files      (r)
  --dir   , --nodir       directories        (b)
  --cdev  , --nocdev      character devices  (c)
  --bdev  , --nobdev      block devices      (b)
  --fifo  , --nofifo      fifo and pipe      (f)
  --sock  , --nosock      sockets            (s)
  --link  , --nolink      symbolic links     (l)

.B forcing the whole set.
  --types <chars>  where chars are the one-char abbrev shown above

.SH MIME FILTERS (optional)
the mime categories are custom defined by me.  the work the same as file types
only they limit by type of content.  they are all turned on by default.

.B turning on and off.
  --audio , --noaudio     audio and music         (a)
  --video , --novideo     video and movies        (v)
  --image , --noimage     image and pictures      (i)
  --source, --nosource    source code             (s)
  --text  , --notext      ascii text              (t)
  --base  , --nobase      database                (b)
  --crypt , --nocrypt     compressed/encrypted    (c)
  --prop  , --noprop      propietary              (p)
  --exec  , --noexec      executable              (x)
  --junk  , --nojunk      backup, swap, and temp  (j)
  --other , --noother     unmatched/unknown       (o)
  --huh   , --nohuh       beyond handling         (?)

.B forcing the whole set.
  --mimes <chars>  where chars are the one-char abbrev shown above

.SH SIZE FILTERS (optional)
the size categories are custom defined by me.  the work the same as file types
only they limit by magnitude.  they are all turned on by default.

.B turning on and off.
  --zb, --nozb   zero bytes                (z)
  --sb, --nosb   small        1b - 999b    (s)
  --kb, --nokb   kilobytes    1k - 999k    (k)
  --mb, --nomb   megabytes    1m - 999m    (m)
  --gb, --nogb   gigabytes    1g - 999g    (g)
  --tb, --notb   terabytes    1t - 999t    (t)
  --pb, --nopb   petabytes    1p+          (p)

.B forcing the whole set.
  --sizes <chars>  where chars are the one-char abbrev shown above

.SH AGE FILTERS (optional)
the age categories are custom defined by me.  the work the same as file types
only they limit time.  they are all turned on by default.

.B turning on.
  --just   , --nojust       0 to 24 hours   (j)
  --days   , --nodays       1  - 3   days   (d)
  --week   , --noweek       4  - 7   days   (w)
  --month  , --nomonth      8  - 30  days   (m)
  --quarter, --noquarter    31 - 90  days   (q)
  --year   , --noyear       91 - 365 days   (y)
  --ancient, --noancient    > 365 days      (a)

.B forcing the whole set.
  --ages <chars>  where chars are the one-char abbrev shown above

.SH NAMING FILTERS (optional)
the naming categories are custom defined by me.  the work the same as file
types only they limit file name quality.  they are all turned on by default.
names are assigned only one category, upgraded to the most extreme problem.

.B turning on.
  --basic  , --nobasic    basic alphanum        [a-z0-9_.]        (b)
  --upper  , --noupper    ... plus upper        ... [A-Z]         (u)
  --punct  , --nopunct    ... plus puntuation   ... [-:;()[]+]    (p)
  --extend , --noextend   visible ascii chars   >  32 and <= 127  (e)
  --space  , --nospace    ... plus spaces       >= 32 and <= 127  (s)
  --crazy  , --nocrazy    any and all chars     ascii 0 to 255    (c)

.B forcing the whole set.
  --naming <chars>  where chars are the one-char abbrev shown above

.B seeing all issues
  --badname, --nobadname    turn on all isssues
 
.SH CREATE THE DATABASE
helios stores all directory and file data in an off-line binary database
for later searching.  this database is typically updated every night using
a scheduler.

.B --updatedb
, rebuilds the database with latest configuration

.B --start <dir>
, sets the maximum recursion to review/save files

.B --depth <#>
, sets absolute maximum recursion to review/save files

also, please review helios (5) to understand how configuration helps prune
unneeded detail from data, such as linux distribution files, temp dirs, etc.

.SH SEARCH OUTPUT
the results of a search are presented as a list of filenames with absolute
paths to make accessing the files as easy as possible.  these filenames can
be also piped into another shell command, substituted into a command argument
using $(locate ...), or sent to an application as desired.





.SH ALTERNATIVE OUTPUT
in some cases helios can be asked to produce something other than search
results.  the alternative output options are as follows.

.B --dirtree
.RS 8
outputs an outline view of the directory structure with sizes.
.RE

.B --dump
.RS 8
outputs a list of all database contents including all fields.
.RE

.B -S, --statistics
.RS 8
outputs information about the database itself.
.RE

.B --mime-table
.RS 8
outputs a summary of database contents by mime-type.
.RE

.B -v, --verbose
.RS 8
outputs each directory as searched before the results.
.RE

.SH CREATING THE DATABASE
helios creates a database of directories and files which is then used for
off line searching.

.B --updatedb
.RS 8
search the drive partion indicated in the --mpoint argument.
.RE

.B --mpoint <s>
.RS 8
partition mount point for processing.
.RE

.B --depth <#>
.RS 8
sets the maximum processing level for database creation.
.RE

.SH CONFIGURATION
helios' configuration information comes primarily from a single file and
is only used in the case of an --updatedb execution.

.nf
.B /etc/helios.conf

.B --conf, --noconf
.RS 8
read (default) or not read its configuration file which lists
directories for special handling
.RE

this configuration file contains several types of records.  within this file
the colon (:) delimiter shown in the examples must be replaced with an ascii
field separator.

.B dir_ignore  : <dir> : <desc>
.RS 8
usage____ : temporary or artificial directories.
recursion : do not recurse into this directory.
naming___ : no naming information is captured within or below it.
sizing___ : no sizing is captured for it or below it.
examples_ : /proc, /sys, /media
.RE

.B dir_stop    : <dir> : <desc>
.RS 8
usage____ : interesting directories with repetitive content.
recursion : recurse into and below this directory.
naming___ : keep naming information within it, but not below it.
sizing___ : capture all cumulative sizing within and below it.
examples_ : /usr/src
.RE

.B dir_over    : <dir> : <desc>
.RS 8
usage____ : directories with contents that aren't typically searched.
recursion : recurse into and below this directory.
naming___ : no naming information is captured within or below it.
sizing___ : capture all cumulative sizing within and below it.
examples_ : /dev, /tmp, /usr/portage, /var/cache
.RE

.B dir_never   : <dir> : <desc>
.RS 8
usage____ : recurring sub-directories with no value to searching.
recursion : recurse into and below this directory.
naming___ : no naming information is captured within or below it.
sizing___ : capture all cumulative sizing within and below it.
examples_ : .git, cache
.RE

.B dir_last    : <dir> : <desc>
.RS 8
usage____ : recurring sub-directories with no value to searching.
recursion : recurse into, but not below this directory.
naming___ : naming is captured within, but not below it.
sizing___ : capture all cumulative sizing within, but not below it.
examples_ : /mnt
.RE

.B dir_append  : <dir> : <desc>
.RS 8
usage____ : separate filesystems with consistent mounting points.
recursion : recurse into and below this directory.
naming___ : keep naming information within or below it.
sizing___ : capture all cumulative sizing within and below it.
examples_ : /boot, /home/music, /home/archive, /mnt/previous
.RE

.B mountpoint  : <dir> : <desc>
.RS 8
usage____ : sets the default mountpoint for --updatedb
.RE

.SH MIME-LIKE TYPES
adding file characterizations based on content can improve search results
dramatically.  the standard mime types are very interesting, but very
detailed and a little insane ;)  i have chosen to use a simplified
version.

the chosen categories which can be used for searching with the --cat option
are...
   a : audio
   i : image
   v : video
   t : text
   s : source code
   x : executable
   p : proprietary
   ? : other

helios' mime information comes primarily from a single file.
.nf
.B /var/lib/helios/helios.mime

all file types are listed in the text file and are used to categorize
files as they are found.  the file layout is eight fields separated
by ascii field separator characters.

   1 : file extension, such as, conf, txt, pdf, ...
   2 : category, which groups extensions audio, video, ...
   3 : group, which ties groups of extensions together
   4 : description, which elaborates on the file format
   5 : importance, to show which formats are desired
   6 : seen, the number of files of this extension reviewed
   7 : kept, the number of files of this extension kept in the database
   8 : found, the number of files of this extension found in last search

this file is read and rewritten each time helios builds the database in
order to update the seen and kept field.

.SH EXAMPLE USAGE

to create a database of the root partition and see progress...
.nf
.B ## helios --updatedb --mpoint / --verbose

to search for a basic pattern...
.nf
.B $$ helios test

to find all audio files...
.nf
.B $$ helios --cat a

to find all files updated in the last two days...
.nf
.B $$ helios --just


.SH AUTHOR
heatherlyrobert at gmail dot com

.SH HERITAGE
helios-phaeton (radiant) is the greek titan of the sun, giving light to
both gods and men alike.  helios is the god of clear sight, and as such,
he sees and hears everything that transpires on the earth and seas.

everyday, he drives a tethrippon (chariot with four horses abreast) from
his palace in the east (india) to the gates of helios in the west (strait
of gibraltar) then a golden boat takes him back to his palace in the east
at night.  his chariot is pulled by four winged, fiery horses.  white horses
and the rooster are sacred to helios.  the collosus of rhodes was his likeness.

he is the son of theia (shining blue sky) and hyperion (light), and sibling
to selene (moon) and eos (rosy-fingered dawn).

.SH COLOPHON
this page is part of a documentation package mean to make the use of the
heatherly tools easier and faster
